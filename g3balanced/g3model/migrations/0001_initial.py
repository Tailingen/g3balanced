# Generated by Django 4.2.7 on 2024-02-04 13:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BalanceUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.CharField(choices=[('vanil', 'Оригинальный баланс'), ('alternative', 'Альтернативный баланс'), ('CM+QP', 'Баланс КонтентМода'), ('LTM', 'Ребаланс 2.0 (ЛТМ)'), ('ultimate', 'Баланс Ультимейт'), ('zliden', 'Баланс Злыдня'), ('smart', 'Умный Баланс'), ('custom', 'Баланс ДенРигеля'), ('valkree', 'Баланс valkree'), ('majestic', 'Маджестик баланс'), ('crafting', 'Глобал крафтинг'), ('snoopy', 'Баланс snoopy'), ('afgan', 'Баланс czarny afgan')], default='vanil', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('price', models.IntegerField()),
                ('note', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('armortype', models.CharField(choices=[('armour', 'Доспехи'), ('helmet', 'Шлемы'), ('shield', 'Щиты'), ('ring', 'Кольца'), ('amulet', 'Амулеты')], max_length=255)),
                ('deftype', models.CharField(choices=[('slash', 'От рубящего'), ('stabb', 'От колющего'), ('crash', 'От дробящего'), ('firy', 'От огня'), ('frosty', 'От холода'), ('energy', 'От электричества')], max_length=255)),
                ('defvalue', models.IntegerField()),
                ('requirement', models.TextField()),
                ('bonus', models.TextField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('consumtype', models.CharField(choices=[('poison', 'Зелья'), ('eat', 'Еда'), ('plant', 'Растения'), ('table', 'Таблички')], max_length=255)),
                ('bonustype1', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('bonusvalue1', models.IntegerField()),
                ('bonustype2', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('bonusvalue2', models.IntegerField()),
                ('bonustype3', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('bonusvalue3', models.IntegerField()),
                ('bonustype4', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('bonusvalue4', models.IntegerField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Miscleanous',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('misctype', models.CharField(choices=[('forquest', 'Квестовые'), ('trash', 'Мусор'), ('trophy', 'Троффеи'), ('treasure', 'Драгоценности')], max_length=255)),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Missile',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('missletype', models.CharField(choices=[('arrow', 'Стрелы'), ('bolt', 'Болты')], max_length=255)),
                ('damagetype', models.CharField(choices=[('slash', 'Рубящий'), ('stabb', 'Колющий'), ('crash', 'Дробящий'), ('firy', 'Огнём'), ('frosty', 'Холодом'), ('energy', 'Электричеством')], max_length=255)),
                ('damagevalue', models.IntegerField()),
                ('effect', models.CharField(choices=[('fire', 'Поджигание'), ('frost', 'Заморозка'), ('toxic', 'Отравление'), ('weak', 'Ослабление')], max_length=255)),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('recipetype', models.CharField(choices=[('smith', 'Кузнечные рецепты'), ('alchemie', 'Алхимические рецепты'), ('cook', 'Кулинарные рецепты'), ('hunting', 'Охотничьи рецепты'), ('smelting', 'Рецепты плавки')], max_length=255)),
                ('result', models.CharField(max_length=255)),
                ('resultamount', models.IntegerField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Scroll',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('magic', models.CharField(max_length=255)),
                ('manacost', models.IntegerField()),
                ('damagetype', models.CharField(choices=[('slash', 'Рубящий'), ('stabb', 'Колющий'), ('crash', 'Дробящий'), ('firy', 'Огнём'), ('frosty', 'Холодом'), ('energy', 'Электричеством')], max_length=255)),
                ('damagevalue', models.IntegerField()),
                ('effect', models.CharField(choices=[('fire', 'Поджигание'), ('frost', 'Заморозка'), ('toxic', 'Отравление'), ('weak', 'Ослабление')], max_length=255)),
                ('impact', models.TextField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('skilltype', models.CharField(choices=[('forces', 'Силовые навыки'), ('hunting', 'Охотничьи навыки'), ('magic', 'Магические навыки'), ('smithing', 'Кузнечные навыки'), ('thief', 'Воровские навыки'), ('alchem', 'Алхимические навыки'), ('other', 'Прочие навыки')], max_length=255)),
                ('requirement', models.TextField()),
                ('atributtype1', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue1', models.IntegerField()),
                ('atributtype2', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue2', models.IntegerField()),
                ('atributtype3', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue3', models.IntegerField()),
                ('atributtype4', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue4', models.IntegerField()),
                ('bonus', models.TextField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('spelltype', models.CharField(choices=[('Innos', 'Магия Инноса'), ('Adanos', 'Магия Аданоса'), ('Beliar', 'Магия Белиара')], max_length=255)),
                ('requirement', models.TextField()),
                ('atributtype1', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue1', models.IntegerField()),
                ('atributtype2', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue2', models.IntegerField()),
                ('atributtype3', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue3', models.IntegerField()),
                ('atributtype4', models.CharField(choices=[('hp', 'Здоровье'), ('hpmax', 'Максимальное здоровье'), ('mp', 'Мана'), ('mpmax', 'Максимальная мана'), ('sp', 'Выносливость'), ('spmax', 'Максимальная выносливость'), ('str', 'Сила'), ('dex', 'Ловкость'), ('int', 'Древнее знание'), ('smt', 'Кузнечное дело'), ('alc', 'Алхимия'), ('thf', 'Воровство')], max_length=255)),
                ('atributvalue4', models.IntegerField()),
                ('manacost', models.IntegerField()),
                ('damagetype', models.CharField(choices=[('slash', 'Рубящий'), ('stabb', 'Колющий'), ('crash', 'Дробящий'), ('firy', 'Огнём'), ('frosty', 'Холодом'), ('energy', 'Электричеством')], max_length=255)),
                ('damagevalue', models.IntegerField()),
                ('effect', models.CharField(choices=[('fire', 'Поджигание'), ('frost', 'Заморозка'), ('toxic', 'Отравление'), ('weak', 'Ослабление')], max_length=255)),
                ('impact', models.TextField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Transform',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('transformtype', models.CharField(choices=[('pois', 'Зелья превращения'), ('stone', 'Камни превращения')], max_length=255)),
                ('unit', models.TextField()),
                ('manacost', models.IntegerField()),
            ],
            bases=('g3model.balanceunit',),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('balanceunit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='g3model.balanceunit')),
                ('weapontype', models.CharField(choices=[('1h', 'Одноручное'), ('2h', 'Двуручное'), ('hammer', 'Топоры'), ('staf', 'Посохи'), ('bow', 'Луки'), ('cross', 'Арбалеты')], max_length=255)),
                ('damagetype', models.CharField(choices=[('slash', 'Рубящий'), ('stabb', 'Колющий'), ('crash', 'Дробящий'), ('firy', 'Огнём'), ('frosty', 'Холодом'), ('energy', 'Электричеством')], max_length=255)),
                ('damagevalue', models.IntegerField()),
                ('effect', models.CharField(choices=[('fire', 'Поджигание'), ('frost', 'Заморозка'), ('toxic', 'Отравление'), ('weak', 'Ослабление')], max_length=255)),
                ('damagerange', models.IntegerField()),
                ('requirement', models.TextField()),
                ('bonus', models.TextField()),
            ],
            bases=('g3model.balanceunit',),
        ),
    ]
